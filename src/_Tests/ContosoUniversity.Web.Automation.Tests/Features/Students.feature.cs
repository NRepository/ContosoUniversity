// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ContosoUniversity.Web.Automation.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Students_")]
    public partial class Students_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Students.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Students_", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the creation of a new student")]
        public virtual void CheckTheCreationOfANewStudent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the creation of a new student", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I\'m at at the \"Student\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("I select the \"Create New\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table1.AddRow(new string[] {
                        "LastName",
                        "Kelly"});
            table1.AddRow(new string[] {
                        "FirstMidName",
                        "John"});
            table1.AddRow(new string[] {
                        "EnrollmentDate",
                        "10/10/1991"});
#line 11
 testRunner.And("I enter the following details", ((string)(null)), table1, "And ");
#line 16
 testRunner.And("I press the \"Create\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "Column1",
                        "Column2",
                        "Column3",
                        "Column5"});
            table2.AddRow(new string[] {
                        "1",
                        "Kelly",
                        "John",
                        "1991-10-10",
                        "Edit ! Details ! Delete"});
#line 17
 testRunner.Then("I expect the following info displayed in the \"students\" table", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check student edit")]
        public virtual void CheckStudentEdit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check student edit", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstMidName",
                        "EnrollmentDate"});
            table3.AddRow(new string[] {
                        "Jones",
                        "Jimbo",
                        "01-Oct-2010"});
#line 28
 testRunner.Given("I have the following students", ((string)(null)), table3, "Given ");
#line 31
 testRunner.And("I\'m at at the \"Student\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("I select the \"Edit\" link on the \"students\" table on row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyName",
                        "Value"});
            table4.AddRow(new string[] {
                        "LastName",
                        "Smith"});
            table4.AddRow(new string[] {
                        "FirstMidName",
                        "John"});
            table4.AddRow(new string[] {
                        "EnrollmentDate",
                        "01-03-2015"});
#line 33
 testRunner.And("I enter the following details", ((string)(null)), table4, "And ");
#line 38
 testRunner.And("I press the \"Save\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "Column1",
                        "Column2",
                        "Column3",
                        "Column5"});
            table5.AddRow(new string[] {
                        "1",
                        "Smith",
                        "John",
                        "2015-03-01",
                        "Edit ! Details ! Delete"});
#line 39
 testRunner.Then("I expect the following info displayed in the \"students\" table", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check student delete")]
        public virtual void CheckStudentDelete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check student delete", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstMidName",
                        "EnrollmentDate"});
            table6.AddRow(new string[] {
                        "Jones",
                        "Jimbo",
                        "01-Oct-2010"});
#line 50
 testRunner.Given("I have the following students", ((string)(null)), table6, "Given ");
#line 53
 testRunner.And("I\'m at at the \"Student\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("I select the \"Delete\" link on the \"students\" table on row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("I select the \"Back to List\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I select the \"Delete\" link on the \"students\" table on row \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I press the \"Delete\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Then("I expect the \"students\" table to be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
